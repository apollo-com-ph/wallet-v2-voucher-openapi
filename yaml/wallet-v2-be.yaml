openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: https://apigw-wallet-sbx.payconnect.io
    description: Sandbox Environment
  - url: https://apigw-wallet-dev.payconnect.io
    description: Development Environment
  
tags:
  - name: transaction-controller
    description: The type Transaction controller.
  - name: member-controller
    description: The type Member controller.
  - name: credit-account-controller
    description: The type Credit account controller.
  - name: account-controller
    description: The type Account controller.
  - name: wallet-controller
    description: The type Wallet controller.

security:
  - bearerAuth: []
  - api_key: []

paths:
  /api/v1/member:
    post:
      tags:
        - member-controller
      summary: Create member response entity.
      description: Create member response entity.
      operationId: createMember
      requestBody:
        description: the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberRequest'
        required: true
      responses:
        '200':
          description: the response entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MemberResponse'
  /api/v1/creditAccount:
    post:
      tags:
        - credit-account-controller
      summary: Create credit account response entity.
      description: Create credit account response entity.
      operationId: createCreditAccount
      requestBody:
        description: the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditAccountRequest'
        required: true
      responses:
        '200':
          description: the response entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditAccountResponse'
  /api/v1/account:
    post:
      tags:
        - account-controller
      summary: Create account response entity.
      description: Create account response entity.
      operationId: createAccount
      requestBody:
        description: the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequest'
        required: true
      responses:
        '200':
          description: the response entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountResponse'
  /api/v1/wallet/deposit/{id}:
    patch:
      tags:
        - wallet-controller
      summary: Add wallet balance by account id response entity.
      description: Add wallet balance by account id response entity.
      operationId: addWalletBalanceByAccountId
      parameters:
        - name: id
          in: path
          description: the id
          required: true
          schema:
            type: integer
            format: int64
        - name: amount
          in: query
          description: the amount
          required: false
          schema:
            type: number
            default: 0
      responses:
        '200':
          description: the response entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountResponse'
  /api/v1/creditAccount/{id}:
    get:
      tags:
        - credit-account-controller
      summary: Gets credit account by id.
      description: Gets credit account by id.
      operationId: getCreditAccountById
      parameters:
        - name: id
          in: path
          description: the id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: the credit account by id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditAccountDetailsResponse'
    patch:
      tags:
        - credit-account-controller
      summary: Update credit account response entity.
      description: Update credit account response entity.
      operationId: updateCreditAccount
      parameters:
        - name: id
          in: path
          description: the id
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditAccountRequest'
        required: true
      responses:
        '200':
          description: the response entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreditAccountResponse'
  /api/v1/account/wallet/{id}:
    patch:
      tags:
        - account-controller
      summary: Add wallet balance by account id response entity.
      description: Add wallet balance by account id response entity.
      operationId: addWalletBalanceByAccountId_1
      parameters:
        - name: id
          in: path
          description: the id
          required: true
          schema:
            type: integer
            format: int64
        - name: amount
          in: query
          description: the amount
          required: false
          schema:
            type: number
            default: 0
      responses:
        '200':
          description: the response entity
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountResponse'
  /api/v1/wallet/account/{id}:
    get:
      tags:
        - wallet-controller
      summary: Gets wallet balance by account id.
      description: Gets wallet balance by account id.
      operationId: getWalletBalanceByAccountId
      parameters:
        - name: id
          in: path
          description: the id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: the wallet balance by account id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WalletResponse'
  /api/v1/transaction/{id}:
    get:
      tags:
        - transaction-controller
      summary: Gets transaction by id.
      description: Gets transaction by id.
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          description: the id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: the transaction by id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionResponse'
  /api/v1/transaction/account/{id}:
    get:
      tags:
        - transaction-controller
      summary: Gets account transactions by id.
      description: Gets account transactions by id.
      operationId: getAccountTransactionsById
      parameters:
        - name: id
          in: path
          description: the id
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionType
          in: query
          description: the transaction type
          required: false
          schema:
            type: string
        - name: dateFrom
          in: query
          description: the date from
          required: false
          schema:
            type: string
        - name: dateThru
          in: query
          description: the date thru
          required: false
          schema:
            type: string
        - name: pageable
          in: query
          description: the pageable
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: the account transactions by id
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModel'
  /api/v1/creditAccount/search:
    get:
      tags:
        - credit-account-controller
      summary: Gets all credit accounts by.
      description: Gets all credit accounts by.
      operationId: getAllCreditAccountsBy
      parameters:
        - name: organizationId
          in: query
          description: the organization id
          required: true
          schema:
            type: integer
            format: int64
        - name: contactNumber
          in: query
          description: the contact number
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: the statuses
          required: false
          schema:
            type: array
            items:
              type: string
        - name: dateFrom
          in: query
          description: the date from
          required: false
          schema:
            type: string
        - name: dateThru
          in: query
          description: the date thru
          required: false
          schema:
            type: string
        - name: accountType
          in: query
          description: the account types
          required: false
          schema:
            type: array
            items:
              type: string
        - name: pageable
          in: query
          description: the pageable
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: the all credit accounts by
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagedModel'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    api_key:
      type: apiKey
      in: header
      name: apikey

  schemas:
    MemberRequest:
      type: object
      properties:
        firstName:
          type: string
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z]+(?:[\s'-][a-zA-Z]+)*$
        middleName:
          type: string
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z\s\-' ]+$
        lastName:
          type: string
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z]+(?:[\s'-][a-zA-Z]+)*$
        tin:
          type: string
          pattern: ^[0-9]{9,12}$
        contactNumber:
          type: string
          pattern: ^[0-9]{10,15}$
        email:
          type: string
        status:
          type: string
      required:
        - firstName
        - lastName
    MemberResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        contactNumber:
          type: string
        email:
          type: string
        dateCreated:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
    CreditAccountRequest:
      type: object
      properties:
        contactNumber:
          type: string
          pattern: ^[0-9]{10,15}$
        creditLimit:
          type: number
          minimum: 0
        dayOfPayment:
          type: string
          enum:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        merchant:
          type: string
          enum:
            - NW
            - CK
            - TNDY
        organizationId:
          type: integer
          format: int64
        member:
          $ref: '#/components/schemas/MemberRequest'
        currency:
          type: object
          properties:
            currencyCode:
              type: string
            numericCode:
              type: integer
              format: int32
            numericCodeAsString:
              type: string
            displayName:
              type: string
            symbol:
              type: string
            defaultFractionDigits:
              type: integer
              format: int32
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - UNBLOCKED
            - DOES_NOT_EXIST
      required:
        - contactNumber
        - dayOfPayment
        - merchant
        - organizationId
    AccountResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        member:
          $ref: '#/components/schemas/MemberResponse'
        status:
          type: string
        dateCreated:
          type: string
          format: date-time
        organizationId:
          type: integer
          format: int64
        accountType:
          type: string
    CreditAccountResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountResponse'
        creditLimit:
          type: integer
          format: int32
    AccountRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 30
          minLength: 0
          pattern: ^[a-zA-Z0-9]*$
        currency:
          type: string
          maxLength: 3
          minLength: 0
        member:
          $ref: '#/components/schemas/MemberRequest'
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - UNBLOCKED
            - DOES_NOT_EXIST
        accountType:
          type: string
        organizationId:
          type: integer
          format: int64
      required:
        - name
        - organizationId
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
    PagedModel:
      type: object
      properties:
        content:
          type: array
          items:
            type: object
        page:
          $ref: '#/components/schemas/PageMetadata'
    WalletResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        contactNumber:
          type: string
        accountType:
          type: string
        currency:
          type: string
        balance:
          type: number
    TransactionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        currency:
          type: string
        amount:
          type: number
        sourceAccountName:
          type: string
        destinationAccountName:
          type: string
        transactionDate:
          type: string
          format: date-time
        terminalId:
          type: string
    CreditAccountDetailsResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AccountResponse'
        transactions:
          $ref: '#/components/schemas/PageObject'
        creditLimit:
          type: integer
          format: int32
    PageObject:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResponse'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        sorted:
          type: boolean
        empty:
          type: boolean
        unsorted:
          type: boolean